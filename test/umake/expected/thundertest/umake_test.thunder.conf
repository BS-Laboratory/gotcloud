index_EXT = $(recab_EXT).bai
DEDUP_TMP = $(TMP_DIR)/alignment.dedup
RUN_SPLIT = FALSE
VCFCOOKER = $(BIN_DIR)/vcfCooker
recab_RMDEP = 1
recab_RUN_DEDUP = dedup $(dedup_PARAMS) $(dedup_USER_PARAMS) --
verifyBamID_PARAMS = --verbose --vcf $(HM3_VCF)
CHRS = 20
qplot_EXT = qplot
BGZIP = $(BIN_DIR)/bgzip
RUN_PILEUP = FALSE
LD_NSNPS = 10000
verifyBamID_DEPEND = recab index
PER_MERGE_STEPS = verifyBamID qplot index recab
dedup_EXT = dedup.bam
SAMTOOLS_VIEW_TARGET_ONLY = TRUE
THUNDER = $(BIN_DIR)/thunderVCF -r 10 --phase --dosage --inputPhased $(THUNDER_STATES)
OUT_DIR = /thundertest/
FILTER_MIN_STR = -20, -10
ALN_TMP = $(TMP_DIR)/alignment.aln
BWA_THREADS = -t 1
REMOTE_PREFIX = 
recab_REQ_EXES = $(BAM_EXE)
index_CMD = $(SAMTOOLS_EXE) index $(basename $^)
LIGATEVCF = perl $(SCRIPT_DIR)/ligateVcf.pl
VCF_SPLIT_CHROM = perl $(SCRIPT_DIR)/vcfSplitChr.pl
FILTER_MAX_STZ = 5, 10
FILTER_FORMULA_MAX_SAMPLES = 1000
BIN_DIR = $(GOTCLOUD_ROOT)/bin
BAM_INDEX = $(TEST_ROOT)/umake_test.index
REF = /test/chr20Ref/human_g1k_v37_chr20.fa
BEAGLE_DIR = beagle
qplot_LABELS = recal
recab_PARAMS = --refFile $(REF) --dbsnp $(DBSNP_VCF) $(recab_STORE_OQ)
MOSAIK_MHP = -mhp 150
FILTER_MAX_AOI = 5
FILTER_WIN_INDEL = 5
BASE_PREFIX = 
FILTER_ADDITIONAL = 
dedup_REQ_EXES = $(BAM_EXE)
RUN_INDEX_FORCE = FALSE
MAKE_BASE_NAME = umake_test
RUN_BEAGLE = FALSE
RUN_INDEX = FALSE
DBSNP_VCF = $(REF_ROOT)/dbsnp135_chr20.vcf.gz
OFFSET_OFF_TARGET = 50
RUN_FILTER = FALSE
MOSAIK_ALIGN_EXE = $(BIN_DIR)/MosaikAligner
MOSAIK_HS = -hs 15
MERGE_BEFORE_FILTER = FALSE
MKB_TMP = $(TMP_DIR)/mosaikBuild
FILTER_MIN_NS = 
PE_ANN = $(REF_DIR)/pe.100.01.ann
BAMUTIL = $(BIN_DIR)/bam
SVM_CUTOFF = 0
verifyBamID_EXT = genoCheck
MOSAIK_BUILD_EXE = $(BIN_DIR)/MosaikBuild
SPLIT_DIR = split
RUN_THUNDER = TRUE
SVMMODEL = 
FILTER_FORMULA_MIN_SAMPLES = 100
verifyBamID_DIR = $(QC_DIR)
GLF_INDEX = glfIndex.ped
BEAGLE = java -Xmx4g -jar $(BIN_DIR)/beagle.20101226.jar seed=993478 gprobs=true niterations=50 lowmem=true
BAM_DEPEND = FALSE
BAM_GLF_DIR = glfs/bams
FILTER_MIN_STZ = -5, -10
MOSAIK_JMP = $(REF_DIR)/
ASSERT_BAM_EXIST = FALSE
SAMTOOLS_EXE = $(BIN_DIR)/samtools
dedup_USER_PARAMS = 
dedup_DIR = $(DEDUP_TMP)
qplot_DIR = $(QC_DIR)
SAI_TMP = $(TMP_DIR)/bwa.sai.t
INFOCOLLECTOR = $(BIN_DIR)/infoCollector
FILTER_MIN_SAMPLE_DP = 1
PREMO_EXE = $(BIN_DIR)/premo
SAMTOOLS_FOR_PILEUP = $(BIN_DIR)/samtools-hybrid
VCFCAT = perl $(SCRIPT_DIR)/vcfCat.pl
BEAGLE2VCF = perl $(SCRIPT_DIR)/beagle2Vcf.pl
HM3_VCF = $(REF_ROOT)/hapmap_3.3.b37.sites.chr20.vcf.gz
BWA_QUAL = -q 15
VCF_DIR = vcfs
index_DIR = $(FINAL_BAM_DIR)
BATCH_TYPE = local
FILTER_MAX_MQ0 = 10
TARGET_DIR = target
VCFMERGE = perl $(SCRIPT_DIR)/bams2vcfMerge.pl
SAMTOOLS_FOR_OTHERS = $(BIN_DIR)/samtools-hybrid
index_REQ_EXES = $(SAMTOOLS_EXE)
BATCH_OPTS = 
verifyBamID_USER_PARAMS = 
BAM_EXE = $(BIN_DIR)/bam
RUN_SVM = FALSE
TMP_DIR = $(OUT_DIR)/tmp
SE_ANN = $(REF_DIR)/se.100.005.ann
merge_DIR = $(MERGE_TMP)
GOTCLOUD_ROOT = /gotcloud
WRITE_TARGET_LOCI = TRUE
QPLOT_EXE = $(BIN_DIR)/qplot
VCFSUMMARY = perl $(SCRIPT_DIR)/vcf-summary
merge_EXT = merged.bam
RECAL_TMP = $(TMP_DIR)/alignment.recal
BAMUTIL_THINNING = --phoneHomeThinning 0
FILTER_MIN_NS_FRAC = .50
TEST_ROOT = $(GOTCLOUD_ROOT)/test/umake
VCF2BEAGLE = perl $(SCRIPT_DIR)/vcf2Beagle.pl --PL
MAKE_OPTS = 
FILTER_MIN_MQ = 20
FILTER_MAX_CBR = 20, 10
SVMCLASSIFY = $(BIN_DIR)/svm-predict
SAMTOOLS_VIEW_FILTER = -q 20 -F 0x0704
FILTER_MAX_LQR = 30, 20
FASTQ_PREFIX = 
BWA_EXE = $(BIN_DIR)/bwa
THUNDER_DIR = thunder
LD_OVERLAP = 1000
VERIFY_BAM_ID_EXE = $(BIN_DIR)/verifyBamID
qplot_DEPEND = recab
recab_EXT = recal.bam
qplot_REQ_EXES = $(QPLOT_EXE)
RUN_VCFPILEUP = FALSE
NOBAQ_SUBSTRINGS = SOLID
qplot_MIN_MAP_QUAL = --minMapQuality 0
VCFSPLIT = perl $(SCRIPT_DIR)/vcfSplit.pl
verifyBamID_REQ_EXES = $(VERIFY_BAM_ID_EXE)
FILTER_MAX_STR = 20, 10
UNIT_CHUNK = 5000000
SORT_MAX_MEM = 2000000000
REF_DIR = /data/local/ref/gotcloud.ref
verifyBamID_CMD = $(VERIFY_BAM_ID_EXE) --bam $(basename $<) --out $(basename $@) $(verifyBamID_PARAMS) $(verifyBamID_USER_PARAMS)
MERGE_TMP = $(TMP_DIR)/alignment.pol
SLEEP_MULT = 
PVCF_DIR = pvcfs
FILTER_MAX_AOZ = 
dedup_RMDEP = 1
QC_DIR = $(OUT_DIR)/QCFiles
RUN_GLFMULTIPLES = FALSE
RUN_SUBSET = FALSE
MAKE_BASE_NAME_PIPE = gotcloud
INVNORM = $(BIN_DIR)/invNorm
FINAL_BAM_DIR = $(OUT_DIR)/bams
TABIX = $(BIN_DIR)/tabix
recab_STORE_OQ = --storeQualTag OQ
dedup_DEPEND = merge
MULTIPLE_TARGET_MAP = 
recab_CMD = $(BAM_EXE) $(recab_RUN_DEDUP)recab --in $(basename $^) --out $(basename $@) $(recab_PARAMS) $(recab_USER_PARAMS) $(BAMUTIL_THINNING)
VCFPILEUP = $(BIN_DIR)/vcfPileup
FILTER_MAX_IOR = 
THUNDER_STATES = --states 400 --weightedStates 300
FILTER_MAX_ABL = 70, 65
MOSAIK_THREADS = -p 1
NEG_SAMPLE = 100
index_DEPEND = recab
UNIFORM_TARGET_BED = $(TEST_ROOT)/umake_test.bed
POS_SAMPLE = 100
FILTER_MAX_SAMPLE_DP = 1000
GLFEXTRACT = $(BIN_DIR)/glfExtract
INDEL_PREFIX = $(REF_ROOT)/1kg.pilot_release.merged.indels.sites.hg19
USE_SVMMODEL = FALSE
GLFMULTIPLES = $(BIN_DIR)/glfMultiples --minMapQuality 0 --minDepth 1 --maxDepth 10000000 --uniformTsTv --smartFilter
polish_CMD = $(BAM_EXE) polishBam -f $(REF) --AS $(AS) --UR file:$(REF) --checkSQ -i $(basename $^) -o $(basename $@) -l $(basename $@).log $(BAMUTIL_THINNING)
SCRIPT_DIR = $(GOTCLOUD_ROOT)/scripts
VCFPASTE = perl $(SCRIPT_DIR)/vcfPaste.pl
BAM_PREFIX = $(TEST_ROOT)
GLFMERGE = $(BIN_DIR)/glfMerge
dedup_CMD = $(BAM_EXE) dedup --in $(basename $^) --out $(basename $@) $(dedup_PARAMS) $(dedup_USER_PARAMS) $(BAMUTIL_THINNING)
RUN_EXTRACT = FALSE
recab_DEPEND = merge
POL_TMP = $(TMP_DIR)/alignment.pol
FILTER_MIN_QUAL = 5
OMNI_VCF = $(REF_ROOT)/1000G_omni2.5.b37.sites.chr20.PASS.vcf.gz
FILTER_MIN_FIC = -20, -10
recab_USER_PARAMS = 
SM_GLF_DIR = glfs/samples
SVMLEARN = $(BIN_DIR)/svm-train
AS = NCBI37
dedup_PARAMS = --log $(basename $@).metrics
MAP_TYPE = BWA
FILTER_MAX_MQ30 = 
recab_DIR = $(FINAL_BAM_DIR)
qplot_CMD = $(QPLOT_EXE) --reference $(REF) --dbsnp $(DBSNP_VCF) --stats $(basename $@).stats --Rcode $(basename $@).R $(qplot_MIN_MAP_QUAL) --bamlabel $(qplot_LABELS) $(basename $^)
REF_ROOT = $(GOTCLOUD_ROOT)/test/chr20Ref
SVM_SCRIPT = perl $(SCRIPT_DIR)/run_libsvm.pl
INTERVAL_CMD = -i ?(CHR):?(START)-?(END)
INTERVAL_EXT = ?(CHR).?(START).?(END).
merge_CMD = $(BAM_EXE) mergeBam --in ?(INPUT) --out -.ubam -r $(CHR)
INPUT_JOIN = --in
CMD = $(merge_CMD) | $(discoverBase/CMD)
DISCOVER_INPUT = -
SAMPLES = MULTI_BAM
SAMPLES = SINGLE_BAM
INPUT_FILE = $($(DEPEND)/OUTPUT)
CMD = $(VT_EXE) index $(INPUT_FILE) 2> $(OUTPUT).log
OUTPUT = $(INPUT_FILE).csi
INTERVAL_CMD = -i ?(CHR):?(START)-?(END)
INTERVAL_EXT = ?(CHR).?(START).?(END).
INTERVAL_CMD = 
INTERVAL_EXT = 
CMD = $(VT_EXE) genotype -b $(GENOTYPE_INPUT) -r $(REF) -s ?(SAMPLE) -o $(OUTPUT) $(INTERVAL_CMD) $(probes/OUTPUT) 2> $(DIR)/genotype.$(INTERVAL_EXT)log
DIR = $(discoverBase/DIR)
OUTPUT = $(DIR)/?(SAMPLE).genotypes.$(INTERVAL_EXT)$(OUTPUT_EXT)
DEPEND = BAM probes indexP
GENOTYPE_INPUT = ?(BAM)
merge_CMD = $(BAM_EXE) mergeBam --in ?(INPUT) --out -.ubam
INPUT_JOIN = --in
CMD = $(merge_CMD) | $(genotypeBase/CMD)
SAMPLES = MULTI_BAM
GENOTYPE_INPUT = -
CMD = $(VT_EXE) merge_candidate_variants -L $(fileList/OUTPUT) -o $(OUTPUT) $(INTERVAL_CMD) 2> $(DIR)/all.sites.$(INTERVAL_EXT)$(OUTPUT_EXT).log
DIR = $(OUT_DIR)/aux
OUTPUT = $(DIR)/all.sites.$(INTERVAL_EXT)$(OUTPUT_EXT)
DEPEND = fileList indexD
INTERVAL_CMD = -i ?(CHR):?(START)-?(END)
INTERVAL_EXT = ?(CHR).?(START).?(END).
OUTPUT = $(DIR)/merge.$(genotypeBase/INTERVAL_EXT)vcf.list.txt
DEPEND = mergeBamGenotype singleBamGenotype
INTERVAL_CMD = 
INTERVAL_EXT = 
INPUT_FILE = $(genotypeBase/OUTPUT)
DEPEND = mergeBamGenotype singleBamGenotype
SAMPLES = SINGLE_BAM
VT_EXE = $(BIN_DIR)/vt
OUTPUT_EXT = bcf
STEPS = mergeBamDiscover singleBamDiscover indexD fileList merge indexM probes indexP mergeBamGenotype singleBamGenotype indexG fileListG mergeG indexMG concat indexC
UNIT_CHUNK = 20000000
OUTPUT_TYPE = +
CMD = ls ?(INPUT) > $(OUTPUT)
DIR = $(OUT_DIR)/aux
OUTPUT = $(DIR)/candidate_vcf_files.txt
DEPEND = mergeBamDiscover singleBamDiscover
OUTPUT = $(INPUT_FILE).tbi
DEPEND = concat
DEPEND = mergeG
CMD = $(VT_EXE) concat ?(INPUT) -o $(OUTPUT) 2> $(DIR)/concat.log
DIR = $(OUT_DIR)/final
OUTPUT = $(DIR)/all.genotypes.$(OUTPUT_EXT)
OUTPUT_EXT = vcf.gz
DEPEND = mergeG
DEPEND = probes
INPUT_FILE = $(discoverBase/OUTPUT)
DEPEND = mergeBamDiscover singleBamDiscover
CMD = $(VT_EXE) construct_probes $(merge/OUTPUT) -r $(REF) -o $(OUTPUT) $(INTERVAL_CMD) 2> $(DIR)/probes.$(INTERVAL_EXT)log
OUTPUT = $(DIR)/probes.sites.$(INTERVAL_EXT)$(OUTPUT_EXT)
DIR = $(OUT_DIR)/aux
DEPEND = merge indexM
CMD = $(VT_EXE) merge -L $(fileListG/OUTPUT) -o $(OUTPUT_TYPE) | $(VT_EXE) compute_features $(OUTPUT_TYPE) -o $(OUTPUT_TYPE) 2> $(DIR)/compute_features.$(genotypeBase/INTERVAL_EXT)log | $(VT_EXE) remove_overlap $(OUTPUT_TYPE) -o $(OUTPUT) 2> $(DIR)/remove_overlap.$(genotypeBase/INTERVAL_EXT)log
DIR = $(OUT_DIR)/final/merge
OUTPUT = $(DIR)/all.genotypes.$(genotypeBase/INTERVAL_EXT)$(OUTPUT_EXT)
DEPEND = fileListG indexG
VT_CHR_CMD = 
DISCOVER_INPUT = ?(BAM)
OUTPUT = $(DIR)/?(SAMPLE).sites.$(CHR_OUTPUT)$(OUTPUT_EXT)
DIR = $(OUT_DIR)/indelvcf/?(SAMPLE)
CHR_OUTPUT = 
normalize_CMD = $(VT_EXE) normalize $(OUTPUT_TYPE) -r $(REF) -o $(OUTPUT_TYPE) 2> $(DIR)/normalize.$(CHR_OUTPUT)log
CHR = 
discover_CMD = $(VT_EXE) discover -b $(DISCOVER_INPUT) -o $(OUTPUT_TYPE) -v $(VARIANT_TYPE) -r $(REF) -s ?(SAMPLE) $(VT_CHR_CMD) 2> $(DIR)/discover.$(CHR_OUTPUT)log
CMD = $(discover_CMD) | $(normalize_CMD) | $(mergedups_CMD)
DEPEND = BAM
VARIANT_TYPE = indels
mergedups_CMD = $(VT_EXE) mergedups $(OUTPUT_TYPE) -o $(OUTPUT) 2> $(DIR)/mergedups.$(CHR_OUTPUT)log
INTERVAL_CMD = 
INTERVAL_EXT = 
DEPEND = merge
